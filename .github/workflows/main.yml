name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    tags:
      - 'v*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch: 
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build-release:
    # The type of runner that the job will run on
    runs-on: ubuntu-18.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: recursive 
      - run: git fetch --tags -f

      - name: Setup secrets file
        env:
          FILE_CONTENT: ${{ secrets.SECRET_CONFIG_FILE }}
        run: |
          mkdir -p lib/secrets
          echo "${FILE_CONTENT}" > lib/secrets/config.dart

      - uses: subosito/flutter-action@v1
        with:
          # flutter-version: '1.26.0'
          channel: dev
        
      - run: flutter clean
      - run: flutter pub get
      - run: flutter pub run flutter_launcher_icons:main

      - name: Build Release APK
        run: flutter build apk --build-name=${GITHUB_REF} --build-number=$GITHUB_RUN_NUMBER
      
      - name: Draft release notes
        run: |
          touch release_notes_body.md
          echo "Date: $(date --iso-8601=m)" >> release_notes_body.md
          echo "Build number: $GITHUB_RUN_NUMBER" >> release_notes_body.md
          echo >> release_notes_body.md
          git --no-pager log $(git describe --tags --abbrev=0 HEAD~2)..HEAD --oneline --pretty='format:- %cD %h: %s %n' >> release_notes_body.md

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          body_path: release_notes_body.md
          tag_name: ${{ github.ref }}
          release_name: ${{ github.ref }} # $(printf '%s ' $(shuf -n2 < <(curl --silent 'https://raw.githubusercontent.com/sindresorhus/word-list/main/words.txt')))
          draft: false
          prerelease: false

      - name: Upload release assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: './build/app/outputs/flutter-apk/*.apk'
          tag: ${{ github.ref }}
          overwrite: true
          file_glob: true